{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Card.js","components/ExpensesFilter.js","components/ExpenseDate.js","components/ExpenseItem.js","components/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/ExpensesChart.js","components/Expenses.js","App.js","index.js"],"names":["ExpenseFom","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","NewExpense","isEditing","setIsEditing","onClick","enteredExpenseData","id","Math","random","toString","onAddExpense","onCancel","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4612e2f8.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseFom = (props) => {\r\n    const [enteredTitle, setEnteredTitle] =useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    \r\n  };\r\n  \r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n   \r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    \r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n  props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n    return(\r\n         <form onSubmit={submitHandler}>\r\n        <div className='new-expense__controls'>\r\n            <div className='new-expense__control'>\r\n               <label>Title</label>\r\n               <input type='text'\r\n               value={enteredTitle}\r\n               onChange={titleChangeHandler}\r\n               />\r\n\r\n            </div>\r\n            <div className='new-expense__control'>\r\n               <label>Amount</label>\r\n               <input type='number' min=\"0.01\" step=\"0.01\"\r\n               value={enteredAmount}\r\n               onChange={amountChangeHandler} />  \r\n            </div>\r\n            <div className='new-expense__control'>\r\n               <label>Date</label>\r\n               <input type='date' min=\"2019-01-01\" step=\"2023-12-31\" \r\n               value={enteredDate}\r\n               onChange={dateChangeHandler}\r\n               />\r\n               \r\n            </div>\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n            <button type='submit'>Add Expense</button>\r\n        </div>\r\n        \r\n    </form>\r\n    );\r\n};\r\nexport default ExpenseFom;","import React, { useState } from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","import './Card.css';\r\n\r\nfunction Card(props) {\r\n  const classes = 'card ' + props.className;\r\n  \r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n        <option value='2023'>2023</option>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;","\r\nimport ExpenseDate from './ExpenseDate';\r\n\r\nimport Card from './Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className='expense-item'>\r\n      <ExpenseDate date={props.date} />\r\n      <div className='expense-item__description'>\r\n        <h2>{props.title}</h2>\r\n        <div className='expense-item__price'>₹{props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import React from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport './ExpensesList.css';\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className='expenses-list'>\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from './Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\n\r\nimport Card from './Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) =>{\r\n  const [filteredYear, setFilteredYear] = useState('2021');\r\n\r\n  const filterChangeHandler = selectedYear => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses = props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  \r\n  return (\r\n    <div>\r\n    <Card className=\"expenses\">\r\n    <ExpensesFilter\r\n     selected={filteredYear}\r\n      onChangeFilter={filterChangeHandler} \r\n      />\r\n       <ExpensesChart expenses={filteredExpenses} />\r\n     <ExpensesList items={filteredExpenses} />\r\n          \r\n      \r\n    </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1', \n    title: 'Books',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'Food',\n    amount: 450,\n    date: new Date(2022, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses,setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler =(expense) =>{\n    setExpenses((prevExpenses) => {\n      return[expense, ...prevExpenses];\n    });\n  };\n  \n   \n  return (\n    <div>\n       <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}